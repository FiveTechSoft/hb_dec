/*
 * Compiler PCode generation functions
 *
 * Copyright 1999 {list of individual authors and e-mail addresses}
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 * (or visit their website at https://www.gnu.org/licenses/).
 *
 */
/*
 * functions for variable size PCODE tracing
 */
const HB_BYTE hb_comp_pcode_len[] = {
   1,        /* HB_P_AND                   */
   1,        /* HB_P_ARRAYPUSH             */
   1,        /* HB_P_ARRAYPOP              */
   3,        /* HB_P_ARRAYDIM              */
   3,        /* HB_P_ARRAYGEN              */
   1,        /* HB_P_EQUAL                 */
   1,        /* HB_P_ENDBLOCK              */
   1,        /* HB_P_ENDPROC               */
   1,        /* HB_P_EXACTLYEQUAL          */
   1,        /* HB_P_FALSE                 */
   1,        /* HB_P_FORTEST               */
   3,        /* HB_P_FUNCTION              */
   2,        /* HB_P_FUNCTIONSHORT         */
   3,        /* HB_P_FRAME                 */
   1,        /* HB_P_FUNCPTR               */
   1,        /* HB_P_GREATER               */
   1,        /* HB_P_GREATEREQUAL          */
   1,        /* HB_P_DEC                   */
   1,        /* HB_P_DIVIDE                */
   3,        /* HB_P_DO                    */
   2,        /* HB_P_DOSHORT               */
   1,        /* HB_P_DUPLICATE             */
   9,        /* HB_P_PUSHTIMESTAMP         */
   1,        /* HB_P_INC                   */
   1,        /* HB_P_INSTRING              */
   2,        /* HB_P_JUMPNEAR              */
   3,        /* HB_P_JUMP                  */
   4,        /* HB_P_JUMPFAR               */
   2,        /* HB_P_JUMPFALSENEAR         */
   3,        /* HB_P_JUMPFALSE             */
   4,        /* HB_P_JUMPFALSEFAR          */
   2,        /* HB_P_JUMPTRUENEAR          */
   3,        /* HB_P_JUMPTRUE              */
   4,        /* HB_P_JUMPTRUEFAR           */
   1,        /* HB_P_LESSEQUAL             */
   1,        /* HB_P_LESS                  */
   3,        /* HB_P_LINE                  */
   0,        /* HB_P_LOCALNAME             */
   2,        /* HB_P_MACROPOP              */
   2,        /* HB_P_MACROPOPALIASED       */
   2,        /* HB_P_MACROPUSH             */
   3,        /* HB_P_MACROARRAYGEN         */
   2,        /* HB_P_MACROPUSHLIST         */
   1,        /* HB_P_MACROPUSHINDEX        */
   2,        /* HB_P_MACROPUSHPARE         */
   2,        /* HB_P_MACROPUSHALIASED      */
   1,        /* HB_P_MACROSYMBOL           */
   1,        /* HB_P_MACROTEXT             */
   3,        /* HB_P_MESSAGE               */
   1,        /* HB_P_MINUS                 */
   1,        /* HB_P_MODULUS               */
   0,        /* HB_P_MODULENAME            */
             /* start: pcodes generated by macro compiler */
   3,        /* HB_P_MMESSAGE              */
   3,        /* HB_P_MPOPALIASEDFIELD      */
   3,        /* HB_P_MPOPALIASEDVAR        */
   3,        /* HB_P_MPOPFIELD             */
   3,        /* HB_P_MPOPMEMVAR            */
   3,        /* HB_P_MPUSHALIASEDFIELD     */
   3,        /* HB_P_MPUSHALIASEDVAR       */
   0,        /* HB_P_MPUSHBLOCK            */
   3,        /* HB_P_MPUSHFIELD            */
   3,        /* HB_P_MPUSHMEMVAR           */
   3,        /* HB_P_MPUSHMEMVARREF        */
   3,        /* HB_P_MPUSHSYM              */
   3,        /* HB_P_MPUSHVARIABLE         */
             /* end: */
   1,        /* HB_P_MULT                  */
   1,        /* HB_P_NEGATE                */
   1,        /* HB_P_NOOP                  */
   1,        /* HB_P_NOT                   */
   1,        /* HB_P_NOTEQUAL              */
   1,        /* HB_P_OR                    */
   4,        /* HB_P_PARAMETER             */
   1,        /* HB_P_PLUS                  */
   1,        /* HB_P_POP                   */
   1,        /* HB_P_POPALIAS              */
   3,        /* HB_P_POPALIASEDFIELD       */
   2,        /* HB_P_POPALIASEDFIELDNEAR   */
   3,        /* HB_P_POPALIASEDVAR         */
   3,        /* HB_P_POPFIELD              */
   3,        /* HB_P_POPLOCAL              */
   2,        /* HB_P_POPLOCALNEAR          */
   3,        /* HB_P_POPMEMVAR             */
   3,        /* HB_P_POPSTATIC             */
   3,        /* HB_P_POPVARIABLE           */
   1,        /* HB_P_POWER                 */
   1,        /* HB_P_PUSHALIAS             */
   3,        /* HB_P_PUSHALIASEDFIELD      */
   2,        /* HB_P_PUSHALIASEDFIELDNEAR  */
   3,        /* HB_P_PUSHALIASEDVAR        */
   0,        /* HB_P_PUSHBLOCK             */
   0,        /* HB_P_PUSHBLOCKSHORT        */
   3,        /* HB_P_PUSHFIELD             */
   2,        /* HB_P_PUSHBYTE              */
   3,        /* HB_P_PUSHINT               */
   3,        /* HB_P_PUSHLOCAL             */
   2,        /* HB_P_PUSHLOCALNEAR         */
   3,        /* HB_P_PUSHLOCALREF          */
   5,        /* HB_P_PUSHLONG              */
   3,        /* HB_P_PUSHMEMVAR            */
   3,        /* HB_P_PUSHMEMVARREF         */
   1,        /* HB_P_PUSHNIL               */
   1 + sizeof( double ) + sizeof( HB_BYTE ) + sizeof( HB_BYTE ),        /* HB_P_PUSHDOUBLE            */
   1,        /* HB_P_PUSHSELF              */
   3,        /* HB_P_PUSHSTATIC            */
   3,        /* HB_P_PUSHSTATICREF         */
   0,        /* HB_P_PUSHSTR               */
   0,        /* HB_P_PUSHSTRSHORT          */
   3,        /* HB_P_PUSHSYM               */
   2,        /* HB_P_PUSHSYMNEAR           */
   3,        /* HB_P_PUSHVARIABLE          */
   1,        /* HB_P_RETVALUE              */
   3,        /* HB_P_SEND                  */
   2,        /* HB_P_SENDSHORT             */
   4,        /* HB_P_SEQBEGIN              */
   4,        /* HB_P_SEQEND                */
   1,        /* HB_P_SEQRECOVER            */
   3,        /* HB_P_SFRAME                */
   5,        /* HB_P_STATICS               */
   0,        /* HB_P_STATICNAME            */
   1,        /* HB_P_SWAPALIAS             */
   1,        /* HB_P_TRUE                  */
   1,        /* HB_P_ZERO                  */
   1,        /* HB_P_ONE                   */
   3,        /* HB_P_MACROFUNC             */
   3,        /* HB_P_MACRODO               */
   0,        /* HB_P_MPUSHSTR              */
   4,        /* HB_P_LOCALNEARADDINT       */
   1,        /* HB_P_MACROPUSHREF          */
   9,        /* HB_P_PUSHLONGLONG          */
   3,        /* HB_P_ENUMSTART             */
   1,        /* HB_P_ENUMNEXT              */
   1,        /* HB_P_ENUMPREV              */
   1,        /* HB_P_ENUMEND               */
   3,        /* HB_P_SWITCH                */
   5,        /* HB_P_PUSHDATE              */
             /* optimization of inlined math operations */
   1,        /* HB_P_PLUSEQPOP             */
   1,        /* HB_P_MINUSEQPOP            */
   1,        /* HB_P_MULTEQPOP             */
   1,        /* HB_P_DIVEQPOP              */
   1,        /* HB_P_PLUSEQ                */
   1,        /* HB_P_MINUSEQ               */
   1,        /* HB_P_MULTEQ                */
   1,        /* HB_P_DIVEQ                 */
   1,        /* HB_P_WITHOBJECTSTART       */
   3,        /* HB_P_WITHOBJECTMESSAGE     */
   1,        /* HB_P_WITHOBJECTEND         */
   3,        /* HB_P_MACROSEND             */
   1,        /* HB_P_PUSHOVARREF           */
   1,        /* HB_P_ARRAYPUSHREF          */
   3,        /* HB_P_VFRAME                */
   4,        /* HB_P_LARGEFRAME            */
   4,        /* HB_P_LARGEVFRAME           */
   0,        /* HB_P_PUSHSTRHIDDEN         */
   5,        /* HB_P_LOCALADDINT           */
   1,        /* HB_P_MODEQPOP              */
   1,        /* HB_P_EXPEQPOP              */
   1,        /* HB_P_MODEQ                 */
   1,        /* HB_P_EXPEQ                 */
   1,        /* HB_P_DUPLUNREF             */
   0,        /* HB_P_MPUSHBLOCKLARGE       */
   0,        /* HB_P_MPUSHSTRLARGE         */
   0,        /* HB_P_PUSHBLOCKLARGE        */
   0,        /* HB_P_PUSHSTRLARGE          */
   2,        /* HB_P_SWAP                  */
   1,        /* HB_P_PUSHVPARAMS           */
   1,        /* HB_P_PUSHUNREF             */
   4,        /* HB_P_SEQALWAYS             */
   4,        /* HB_P_ALWAYSBEGIN           */
   1,        /* HB_P_ALWAYSEND             */
   1,        /* HB_P_DECEQPOP              */
   1,        /* HB_P_INCEQPOP              */
   1,        /* HB_P_DECEQ                 */
   1,        /* HB_P_INCEQ                 */
   3,        /* HB_P_LOCALDEC              */
   3,        /* HB_P_LOCALINC              */
   3,        /* HB_P_LOCALINCPUSH          */
   3,        /* HB_P_PUSHFUNCSYM           */
   3,        /* HB_P_HASHGEN               */
   1,        /* HB_P_SEQBLOCK              */
   0,        /* HB_P_THREADSTATICS         */
   1         /* HB_P_PUSHAPARAMS           */
};
